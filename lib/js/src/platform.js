// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var ReactNative = require("react-native");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");

var UnknownPlatform = Caml_exceptions.create("Platform-BsReactNative.UnknownPlatform");

function os() {
  var x = ReactNative.Platform.OS;
  switch (x) {
    case "android" : 
        return /* Android */0;
    case "ios" : 
        var match = ReactNative.Platform.isPad;
        if (match) {
          return /* IOS */[/* Pad */1];
        } else {
          var match$1 = ReactNative.Platform.isTVOS;
          if (match$1) {
            return /* IOS */[/* TV */2];
          } else {
            return /* IOS */[/* Phone */0];
          }
        }
    default:
      throw [
            UnknownPlatform,
            x
          ];
  }
}

function equals(targetOs) {
  return targetOs === os(/* () */0);
}

var UnknownVersion = Caml_exceptions.create("Platform-BsReactNative.UnknownVersion");

function version() {
  var match = ReactNative.Platform.Version;
  if (match !== undefined) {
    return match;
  } else {
    throw UnknownVersion;
  }
}

exports.UnknownPlatform = UnknownPlatform;
exports.os = os;
exports.equals = equals;
exports.UnknownVersion = UnknownVersion;
exports.version = version;
/* react-native Not a pure module */
